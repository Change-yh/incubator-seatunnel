#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

######
###### This config file is a demonstration of batch processing in SeaTunnel config
######

env {
  # You can set spark configuration here
  # see available properties defined by spark: https://spark.apache.org/docs/latest/configuration.html#available-properties
  spark.app.name = "SeaTunnel"
  spark.executor.instances = 2
  spark.executor.cores = 1
  spark.executor.memory = "1g"
  spark.master = local
}

source {
  # This is a example input plugin **only for test and demonstrate the feature input plugin**
  Trifile {
    result_table_name = "my_dataset"
    path = "hdfs://data001.dataeasy:8020/tmp/employee_intable/"
    format= "parquet"
  }

  # You can also use other input plugins, such as hdfs
  # hdfs {
  #   result_table_name = "accesslog"
  #   path = "hdfs://hadoop-cluster-01/nginx/accesslog"
  #   format = "json"
  # }

  # If you would like to get more information about how to configure seatunnel and see full list of input plugins,
  # please go to https://seatunnel.apache.org/docs/spark/configuration/source-plugins/Fake
}

transform {
  # split data by specific delimiter

  # you can also use other transform plugins, such as sql
//   sql {
////     sql = "select REALPAY,DECLINEPAY,GIVETYPE,GIVETYPEDESC from my_dataset"
//     sql = "select name,salary,age,job from my_dataset"
//   }

  # If you would like to get more information about how to configure seatunnel and see full list of transform plugins,
  # please go to https://seatunnel.apache.org/docs/spark/configuration/transform-plugins/Split
}

sink {
  # choose stdout output plugin to output data to console
  Console {}
//  jdbc {
//    saveMode = "update",
////    saveMode = "append",
//    driver="com.mysql.jdbc.Driver"
//    url = "jdbc:mysql://localhost:3306/demon",
//    user = "root",
//    password = "XYHfighting",
//    dbTable = "test",
////    customUpdateStmt = "INSERT INTO test (REALPAY,DECLINEPAY,GIVETYPE,GIVETYPEDESC) values('%d', '%d', '%d', '%d') ON DUPLICATE KEY UPDATE REALPAY=IFNULL(VALUES('%d'),REALPAY),DECLINEPAY=IFNULL(VALUES('%d'),DECLINEPAY),GIVETYPE=IFNULL(VALUES('%d'),GIVETYPE),GIVETYPEDESC=IFNULL(VALUES('%d'),GIVETYPEDESC)"
//    customUpdateStmt = "INSERT INTO test (REALPAY,DECLINEPAY,GIVETYPE,GIVETYPEDESC) values(?, ?, ?, ?) ON DUPLICATE KEY UPDATE REALPAY=IFNULL(VALUES(REALPAY),REALPAY),DECLINEPAY=IFNULL(VALUES(DECLINEPAY),DECLINEPAY),GIVETYPE=IFNULL(VALUES(GIVETYPE),GIVETYPE),GIVETYPEDESC=IFNULL(VALUES(GIVETYPEDESC),GIVETYPEDESC)"
//  }
  # you can also you other output plugins, such as sql
  # hdfs {
  #   path = "hdfs://hadoop-cluster-01/nginx/accesslog_processed"
  #   save_mode = "append"
  # }

  # If you would like to get more information about how to configure seatunnel and see full list of output plugins,
  # please go to https://seatunnel.apache.org/docs/spark/configuration/sink-plugins/Console
}
